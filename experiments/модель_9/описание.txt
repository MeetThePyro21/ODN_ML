input_ = keras.layers.Input(shape=[None, n])

layer1 = keras.layers.LSTM(n, return_sequences=True)(input_)
layer2 = keras.layers.LSTM(n, return_sequences=True)(layer1)
layer3 = keras.layers.LSTM(n, return_sequences=True)(layer2)
layer4 = keras.layers.LSTM(n, return_sequences=True)(layer3)
layer5 = keras.layers.LSTM(n, return_sequences=True)(layer4)

dense_layer = keras.layers.Dense(n)(layer1[:, -target_size:, :])

model = keras.Model(inputs=[input_], outputs=[dense_layer])

optimizer = tf.keras.optimizers.Adam(
    learning_rate=0.0001, name='Adam')

model.compile(loss="mae", optimizer=optimizer)

history = model.fit(X_train, y_train, epochs=1000, batch_size=10,
                    validation_data=(X_val, y_val))